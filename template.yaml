AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  AWS Connect ChatGPT Integration

Parameters:
  CONNECTID:
    Description: AWS Connect Instance ID (last part of the ARN)
    Type: String
    Default: f837ec93-b6e5-4429-acb7-f698fff0148c
  OPENAIAPIKEY:
    Description: OpenAI Key stored in parameter store
    Type: AWS::SSM::Parameter::Value<String>
    Default: OPENAI_API_KEY
  OPENAIMODEL:
    Description: OpenAI ChatGPT Model
    Type: String
    Default: gpt-3.5-turbo
    AllowedValues: # https://platform.openai.com/docs/models/overview
        - gpt-3.5-turbo
        - gpt-4
  VOICEIDEN:
    Description: The voice used for LEX and prompt generation for English
    Type: String
    Default: Joanna
    AllowedValues: # https://docs.aws.amazon.com/polly/latest/dg/ntts-voices-main.html
        - Ivy      # Female (child)
        - Joanna   # Female
        - Kendra   # Female
        - Kimberly # Female
        - Salli    # Female
        - Joey     # Male
        - Justin   # Male (child)
        - Kevin    # Male (child)
        - Matthew  # Male
        - Ruth     # Female
        - Stephen  # Male
  VOICEIDES:
    Description: The voice used for LEX and prompt generation for Spanish
    Type: String
    Default: Lupe
    AllowedValues:
        - Mia      # Female (Mexican)
        - Andrés   # Male (Mexican)
        - Lupe     # Female (US)
        - Pedro    # Male (US)
  NAMEENGLISH:
    Description: First Name for transferring calls to in English
    Type: String
    Default: Representative
  NAMESPANISH:
    Description: First Name for transferring calls to in Spanish
    Type: String
    Default: Representante
  TRANSFERNUMBER:
    Description: Phone Number to transfer calls to for a person
    Type: String
    Default: '+18004444444'
       

Globals:
  Function:
    Runtime: java11
    Timeout: 30
    MemorySize: 3009
    Architectures:  # SnapStart on Java 11 requires x86
        - x86_64

Resources:
  BucketKey:
    Type: AWS::KMS::Key
    Properties:
      Description: Key Used for Bucket Encryption Required by Connect
      KeyPolicy:
        Version: '2012-10-17'
        Id: !Sub ${AWS::StackName}-bucket-key
        Statement:
          - Sid: Enable IAM User Permissions
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: kms:*
            Resource: '*'
          - Sid: Allow Key Administrators to Manage Key
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:role/AdministratorRole
            Action:
              - kms:Create*
              - kms:Describe*
              - kms:Enable*
              - kms:List*
              - kms:Put*
              - kms:Update*
              - kms:Revoke*
              - kms:Disable*
              - kms:Get*
              - kms:Delete*
              - kms:ScheduleKeyDeletion
              - kms:CancelKeyDeletion
            Resource: '*'
          - Sid: Allow Encrypt and Decrypt for All Principals
            Effect: Allow
            Principal:
              AWS: '*'
            Action:
              - kms:Encrypt
              - kms:Decrypt
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
            Resource: '*'
          - Sid: Allow Connect to also use the key when reading prompts
            Effect: Allow
            Principal:
              Service: connect.amazonaws.com
            Action:
              - kms:Decrypt
            Resource: '*'
            
            
  PromptBucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: aws:kms
              KMSMasterKeyID: !Ref BucketKey
 
  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref PromptBucket
      PolicyDocument:  
        Version: 2012-10-17
        Statement:
          - Sid: AllowConnectAccess
            Effect: Allow
            Principal:
              Service: connect.amazonaws.com
            Action:
              - s3:ListBucket
              - s3:GetObject
            Resource:
              - !GetAtt PromptBucket.Arn
              - !Join [ "", [ !GetAtt PromptBucket.Arn , '/*' ] ]
            Condition:
              StringEquals:
                "aws:SourceArn": !Sub arn:aws:connect:${AWS::Region}:${AWS::AccountId}:instance/${CONNECTID}
                "aws:SourceAccount": !Sub "${AWS::AccountId}"
                
 
  PromptCreator:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-PromptCreator
      Description: Creates Static prompts to be used in Connect Flows
      Handler: cloud.cleo.connectgpt.PollyPromptGenerator
      CodeUri: ./PollyPromptCreation
      Environment: 
        Variables:
            PROMPT_BUCKET: !Ref PromptBucket
      Policies: 
        - S3CrudPolicy:
            BucketName: !Ref PromptBucket
        - Version: '2012-10-17' 
          Statement:
            - Effect: Allow
              Action:
                - polly:SynthesizeSpeech
              Resource: '*'
            
  
  MainPrompt:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDEN
        PromptName: main.wav
        PromptText: |
            Welcome to CLEO Cloud Solutions, thank you for calling.

  SpanishPrompt:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDES
        PromptName: spanish.wav
        PromptText: |
            Para español, marca dos.

  LexPromptEnglish:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDEN
        PromptName: lex_en-US_.wav
        PromptText: How can I help today?

  LexPromptSpanish:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDES
        PromptName: lex_es-US_.wav
        PromptText: ¿Cómo puedo ayudar hoy?
        
  TransferPromptEnglish:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDEN
        PromptName: transfer_en-US_.wav
        PromptText: !Sub Transferring to ${NAMEENGLISH}

  TransferPromptSpanish:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDES
        PromptName: transfer_es-US_.wav
        PromptText: !Sub Transferencia a ${NAMESPANISH}
        
  ErrorPromptEnglish:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDEN
        PromptName: error_en-US_.wav
        PromptText: I'm sorry there is an error calling the Bot, please try again later

  ErrorPromptSpanish:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDES
        PromptName: error_es-US_.wav
        PromptText: Lo siento, hay un error al llamar al Bot, inténtalo de nuevo más tarde.
        
  ClosingPromptEnglish:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDEN
        PromptName: closing_en-US_.wav
        PromptText: Thank you for calling, good bye
        
  ClosingPromptSpanish:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDES
        PromptName: closing_es-US_.wav
        PromptText: Gracias por llamar, adiós.
        
  HelpPromptEnglish:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDEN
        PromptName: help_en-US_.wav
        PromptText: !Sub |
            This is a combined LEX and ChatGPT model.  
            You can ask for ${NAMEENGLISH} and the call will be transferred, say good bye, or phrase any question for Chat GPT.
            Your context will be maintained between calls for each day, so you can hang up, call back, and you will not lose context.
            
  HelpPromptSpanish:
    Type: Custom::PromptCreator
    Properties:
        ServiceToken: !GetAtt PromptCreator.Arn
        VoiceId: !Ref VOICEIDES
        PromptName: help_es-US_.wav
        PromptText: !Sub |
            Este es un modelo combinado de LEX y ChatGPT.
            Puede preguntar por ${NAMESPANISH} y la llamada se transferirá, decir adiós o formular cualquier pregunta para Chat GPT.
            Su contexto se mantendrá entre las llamadas de cada día, por lo que puede colgar, volver a llamar y no perderá el contexto.
            
            
  BotRuntimeRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lexv2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - PolicyName: LexRuntimeRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - "polly:SynthesizeSpeech"
                  - "comprehend:DetectSentiment"
                  - "lambda:invokeFunction"
                Resource: "*"
                
  LexBot:
    Type: AWS::Lex::Bot
    Properties:
      Name: !Sub ${AWS::StackName}-Lex-Bot
      Description: ChatGPT Bot 
      RoleArn: !GetAtt BotRuntimeRole.Arn
      DataPrivacy:
        ChildDirected: false
      AutoBuildBotLocales: false
      IdleSessionTTLInSeconds: 300
      BotLocales:
        - LocaleId: en_US
          Description: ChatGPT Bot English
          NluConfidenceThreshold: 0.40
          VoiceSettings:
            VoiceId: !Ref VOICEIDEN
          Intents:
            - Name: "About"
              Description: "Play a help prompt"
              SampleUtterances:
                - Utterance: "I'm confused"
                - Utterance: "help"
                - Utterance: "What can this do"
                - Utterance: "what can I say"
                - Utterance: "give me some examples"
                - Utterance: "Help me out here"
                - Utterance: "I need help"
            - Name: "Quit"
              Description: "Hang Up the call"
              SampleUtterances:
                - Utterance: "quit"
                - Utterance: "I'm done"
                - Utterance: "good bye"
                - Utterance: "talk to you later"
                - Utterance: "see ya"
                - Utterance: "later"
                - Utterance: "exit"
            - Name: !Ref NAMEENGLISH
              Description: !Sub "Send Call to ${NAMEENGLISH}"
              SampleUtterances:
                - Utterance: !Sub "${NAMEENGLISH}"
                - Utterance: !Sub "I want to talk with ${NAMEENGLISH}"
                - Utterance: "speak with someone"
                - Utterance: "talk to someone"
                - Utterance: "speak with a person"
                - Utterance: !Sub "connect with ${NAMEENGLISH}"
            - Name: "FallbackIntent"
              Description: "Default intent when no other intent matches, send to GPT"
              ParentIntentSignature: "AMAZON.FallbackIntent"
              FulfillmentCodeHook:
                  Enabled: true
              InitialResponseSetting:
                  InitialResponse:
                      AllowInterrupt: false
                      MessageGroupsList:
                          - Message:
                              PlainTextMessage:
                                Value: Thinking
                            Variations:
                              - PlainTextMessage:
                                  Value: Working
                              - PlainTextMessage:
                                  Value: Processing                
        - LocaleId: es_US
          Description: ChatGPT Bot Spanish
          NluConfidenceThreshold: 0.40
          VoiceSettings:
            VoiceId: !Ref VOICEIDES
          Intents:
            - Name: "About"
              Description: "Play a help prompt"
              SampleUtterances:
                - Utterance: "Estoy confundida"
                - Utterance: "ayuda"
                - Utterance: "¿Qué puede hacer esto?"
                - Utterance: "qué puedo decir"
                - Utterance: "dame algunos ejemplos"
                - Utterance: "Ayudame aqui"
                - Utterance: "necesito ayuda"
            - Name: "Quit"
              Description: "Hang Up the call"
              SampleUtterances:
                - Utterance: "abandonar"
                - Utterance: "He terminado"
                - Utterance: "adiós"
                - Utterance: "Hablaré contigo más tarde"
                - Utterance: "salida"
                - Utterance: "gracias"
            - Name: !Ref NAMEENGLISH
              Description: !Sub "Send Call to ${NAMEENGLISH}"
              SampleUtterances:
                - Utterance: !Sub "${NAMEENGLISH}"
                - Utterance: !Sub "${NAMESPANISH}"
                - Utterance: !Sub "quiero hablar con ${NAMEENGLISH}"
                - Utterance: !Sub "quiero hablar con ${NAMESPANISH}"
                - Utterance: "hablar con alguien"
                - Utterance: "hablar con una persona"
            - Name: "FallbackIntent"
              Description: "Default intent when no other intent matches, send to GPT"
              ParentIntentSignature: "AMAZON.FallbackIntent"
              FulfillmentCodeHook:
                  Enabled: true
              InitialResponseSetting:
                  InitialResponse:
                      AllowInterrupt: false
                      MessageGroupsList:
                          - Message:
                              PlainTextMessage:
                                Value: Pensamiento
                            Variations:
                              - PlainTextMessage:
                                  Value: trabajador
                              - PlainTextMessage:
                                  Value: "la transformación"  
          
  BotVersion:
    Type: AWS::Lex::BotVersion
    Properties:
      BotId: !Ref LexBot
      BotVersionLocaleSpecification:
        - LocaleId: en_US
          BotVersionLocaleDetails:
            SourceBotVersion: DRAFT
        - LocaleId: es_US
          BotVersionLocaleDetails:
            SourceBotVersion: DRAFT
      Description: ChatGPT Bot V1
      
  BotAlias:
    Type: AWS::Lex::BotAlias
    Properties:
      BotId: !Ref LexBot
      BotAliasName: "Latest"
      BotVersion: !GetAtt BotVersion.BotVersion
      SentimentAnalysisSettings:
        DetectSentiment: false
      BotAliasLocaleSettings:
        - LocaleId: en_US
          BotAliasLocaleSetting:
            Enabled: true
            CodeHookSpecification:
              LambdaCodeHook:
                CodeHookInterfaceVersion: "1.0"
                LambdaArn: !Ref ChatGPT.Alias
        - LocaleId: es_US
          BotAliasLocaleSetting:
            Enabled: true
            CodeHookSpecification:
              LambdaCodeHook:
                CodeHookInterfaceVersion: "1.0"
                LambdaArn: !Ref ChatGPT.Alias
        
  LexV2ConnectIntegration:
    Type: AWS::Connect::IntegrationAssociation
    Properties:
      InstanceId: !Sub arn:aws:connect:${AWS::Region}:${AWS::AccountId}:instance/${CONNECTID}
      IntegrationType: LEX_BOT
      IntegrationArn: !GetAtt BotAlias.Arn
      
  NewCallTopic:
        Type: AWS::SNS::Topic
        Properties:
            DisplayName: Connect
            TopicName: !Sub ${AWS::StackName}-ConnectNewCall
            
            
  SendToSNS:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ForwardEventToSNS
      Description: Lambda that will forward payload to SNS Topic when new call arrives
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 512
      Timeout: 5
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt NewCallTopic.TopicName
      InlineCode: !Sub |
        const {SNSClient, PublishCommand} = require("@aws-sdk/client-sns");
        const client = new SNSClient();
        exports.handler = async function (event) {
            //console.log(JSON.stringify(event));
            const params = {
                Message: JSON.stringify(event),
                TopicArn: '${NewCallTopic}'
            };
            const response = await client.send(new PublishCommand(params));
            //console.log("Success, message sent. MessageID:", response.MessageId);
            return {status: 'OK'};
        };
            
  SendToSNSConnectIntegration:
    Type: AWS::Connect::IntegrationAssociation
    Properties:
      InstanceId: !Sub arn:aws:connect:${AWS::Region}:${AWS::AccountId}:instance/${CONNECTID}
      IntegrationType: LAMBDA_FUNCTION
      IntegrationArn: !GetAtt SendToSNS.Arn
  
  ContactUpdatePolicy:
    Type: 'AWS::IAM::ManagedPolicy'
    Properties:
        Description: Allow Lambdas to update Contact Center attributes on Connect Contact
        PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - connect:UpdateContactAttributes
                Resource: '*'
                
  NewCallLookup:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-NewCallLookup
      Description: Lookup counters from Dynamo Table and set contact values
      Handler: cloud.cleo.connectgpt.NewCallLookup
      CodeUri: ./NewCallLookup
      SnapStart:
        ApplyOn: PublishedVersions
      AutoPublishAlias: SNAPSTART
      Environment: 
        Variables:
          CALLS_TABLE_NAME: !Ref CallTable
      Policies: 
        - !Ref ContactUpdatePolicy
        - DynamoDBReadPolicy:
            TableName: !Ref CallTable
        - DynamoDBWritePolicy:
            TableName: !Ref CallTable
      Events:
        SNSTrigger:
            Type: SNS
            Properties:
                Topic: !Ref NewCallTopic
                
                
  CallTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: !Sub ${AWS::StackName}-calls
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: phoneNumber
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: phoneNumber
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
                
  ChatGPT:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${AWS::StackName}-ChatGPT
      Description: Lex fullfilment that talks to ChatGPT service
      Handler: cloud.cleo.connectgpt.ChatGPTLambda
      AutoPublishAlias: SNAPSTART
      CodeUri: ./ChatGPT
      Environment: 
        Variables:
          OPENAI_MODEL: !Ref OPENAIMODEL
          OPENAI_API_KEY: !Ref OPENAIAPIKEY
          SESSION_TABLE_NAME: !Ref SessionTable
      SnapStart:
        ApplyOn: PublishedVersions
      Policies: 
        - DynamoDBReadPolicy:
            TableName: !Ref SessionTable
        - DynamoDBWritePolicy:
            TableName: !Ref SessionTable
  
  
        
  LexToChatGPTPerm:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !Ref ChatGPT
        Action: lambda:InvokeFunction
        Principal: lexv2.amazonaws.com
        SourceAccount: !Ref 'AWS::AccountId'
  
  LexToChatGPTSnapPerm:
      Type: AWS::Lambda::Permission
      Properties:
        FunctionName: !Ref ChatGPT.Alias
        Action: lambda:InvokeFunction
        Principal: lexv2.amazonaws.com
        SourceAccount: !Ref 'AWS::AccountId'
  
  SessionTable:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    Properties:
      TableName: !Sub ${AWS::StackName}-session
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: phoneNumber
          AttributeType: S
        - AttributeName: date
          AttributeType: S
      KeySchema:
        - AttributeName: phoneNumber
          KeyType: HASH
        - AttributeName: date
          KeyType: RANGE
      TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
 
          
  ConnectFlow:
    Type: AWS::Connect::ContactFlow
    Properties:
      Name: !Sub ${AWS::StackName}-gptflow
      Description: ChatGPT Contact Flow
      Type: CONTACT_FLOW
      InstanceArn: !Sub arn:aws:connect:${AWS::Region}:${AWS::AccountId}:instance/${CONNECTID}
      Content: !Sub |
        {
          "Version": "2019-10-30",
          "StartAction": "8900852b-67ed-4e7c-b9db-1b7e372bdf69",
          "Actions": [{
            "Parameters": {
                "TextToSpeechVoice": "${VOICEIDES}"
            },
            "Identifier": "78335f1c-12d8-441e-aedc-f348e9699023",
            "Type": "UpdateContactTextToSpeechVoice",
            "Transitions": {
                "NextAction": "6ecffbe5-6947-47d5-ac01-d1a912acce29"
            }
        }, {
            "Parameters": {
                "LanguageCode": "es-US"
            },
            "Identifier": "6ecffbe5-6947-47d5-ac01-d1a912acce29",
            "Type": "UpdateContactData",
            "Transitions": {
                "NextAction": "6808064a-12a7-4734-81c2-7dc6f7299339",
                "Errors": [{
                        "NextAction": "6808064a-12a7-4734-81c2-7dc6f7299339",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "TextToSpeechVoice": "${VOICEIDEN}"
            },
            "Identifier": "23da7771-7a02-42e6-8381-3fcb25f39697",
            "Type": "UpdateContactTextToSpeechVoice",
            "Transitions": {
                "NextAction": "b9aff07a-7ad1-4b99-9092-0eaf799bdc96"
            }
        }, {
            "Parameters": {
                "LanguageCode": "en-US"
            },
            "Identifier": "b9aff07a-7ad1-4b99-9092-0eaf799bdc96",
            "Type": "UpdateContactData",
            "Transitions": {
                "NextAction": "6fa66314-f6a2-4829-b466-86dad4bc3b43",
                "Errors": [{
                        "NextAction": "6fa66314-f6a2-4829-b466-86dad4bc3b43",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "FlowLoggingBehavior": "Enabled"
            },
            "Identifier": "8900852b-67ed-4e7c-b9db-1b7e372bdf69",
            "Type": "UpdateFlowLoggingBehavior",
            "Transitions": {
                "NextAction": "23da7771-7a02-42e6-8381-3fcb25f39697"
            }
        }, {
            "Parameters": {},
            "Identifier": "2a32e14c-0951-4060-b3c9-580ea1d0d910",
            "Type": "DisconnectParticipant",
            "Transitions": {}
        }, {
            "Parameters": {
                "ThirdPartyPhoneNumber": "${TRANSFERNUMBER}",
                "ThirdPartyConnectionTimeLimitSeconds": "30",
                "ContinueFlowExecution": "False",
                "CallerId": {
                    "Name": "AWSCONNECT"
                }
            },
            "Identifier": "5d88d7d0-5b1c-4b3d-9fb8-246b2e64f56f",
            "Type": "TransferParticipantToThirdParty",
            "Transitions": {
                "NextAction": "2a32e14c-0951-4060-b3c9-580ea1d0d910",
                "Errors": [{
                        "NextAction": "2a32e14c-0951-4060-b3c9-580ea1d0d910",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "StoreInput": "False",
                "InputTimeLimitSeconds": "3",
                "Media": {
                    "Uri": "s3://${PromptBucket}/spanish.wav",
                    "SourceType": "S3",
                    "MediaType": "Audio"
                }
            },
            "Identifier": "4dc9bbef-e78f-49f4-844d-9d07986704f0",
            "Type": "GetParticipantInput",
            "Transitions": {
                "NextAction": "e86e4dd1-0104-4d67-bddc-10182127273e",
                "Conditions": [{
                        "NextAction": "78335f1c-12d8-441e-aedc-f348e9699023",
                        "Condition": {
                            "Operator": "Equals",
                            "Operands": ["2"]
                        }
                    }],
                "Errors": [{
                        "NextAction": "e86e4dd1-0104-4d67-bddc-10182127273e",
                        "ErrorType": "InputTimeLimitExceeded"
                    }, {
                        "NextAction": "e86e4dd1-0104-4d67-bddc-10182127273e",
                        "ErrorType": "NoMatchingCondition"
                    }, {
                        "NextAction": "e86e4dd1-0104-4d67-bddc-10182127273e",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "Media": {
                    "Uri": "s3://${PromptBucket}/closing_$.['LanguageCode']_.wav",
                    "SourceType": "S3",
                    "MediaType": "Audio"
                }
            },
            "Identifier": "41429fc7-4d86-406d-ad8b-c68d31f5123c",
            "Type": "MessageParticipant",
            "Transitions": {
                "NextAction": "2a32e14c-0951-4060-b3c9-580ea1d0d910",
                "Errors": [{
                        "NextAction": "2a32e14c-0951-4060-b3c9-580ea1d0d910",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "Media": {
                    "Uri": "s3://${PromptBucket}/error_$.['LanguageCode']_.wav",
                    "SourceType": "S3",
                    "MediaType": "Audio"
                }
            },
            "Identifier": "4346b8e4-b01b-40d9-9ec9-a41386aa51d5",
            "Type": "MessageParticipant",
            "Transitions": {
                "NextAction": "2a32e14c-0951-4060-b3c9-580ea1d0d910",
                "Errors": [{
                        "NextAction": "2a32e14c-0951-4060-b3c9-580ea1d0d910",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "Media": {
                    "Uri": "s3://${PromptBucket}/transfer_$.['LanguageCode']_.wav",
                    "SourceType": "S3",
                    "MediaType": "Audio"
                }
            },
            "Identifier": "652dd2c3-0163-4eb1-aba6-e65d0ae3f51f",
            "Type": "MessageParticipant",
            "Transitions": {
                "NextAction": "5d88d7d0-5b1c-4b3d-9fb8-246b2e64f56f",
                "Errors": [{
                        "NextAction": "5d88d7d0-5b1c-4b3d-9fb8-246b2e64f56f",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "Media": {
                    "Uri": "s3://${PromptBucket}/help_$.['LanguageCode']_.wav",
                    "SourceType": "S3",
                    "MediaType": "Audio"
                }
            },
            "Identifier": "ce3c59e8-960c-4d9b-937c-e0b33e4399bb",
            "Type": "MessageParticipant",
            "Transitions": {
                "NextAction": "3e562537-3142-4bbc-86db-ab8e09c366de",
                "Errors": [{
                        "NextAction": "3e562537-3142-4bbc-86db-ab8e09c366de",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "ComparisonValue": "$.Attributes.PlayPrompt"
            },
            "Identifier": "e86e4dd1-0104-4d67-bddc-10182127273e",
            "Type": "Compare",
            "Transitions": {
                "NextAction": "3e562537-3142-4bbc-86db-ab8e09c366de",
                "Conditions": [{
                        "NextAction": "e2edb7ac-38ae-4587-a9b7-a73218392c2e",
                        "Condition": {
                            "Operator": "Equals",
                            "Operands": ["true"]
                        }
                    }],
                "Errors": [{
                        "NextAction": "3e562537-3142-4bbc-86db-ab8e09c366de",
                        "ErrorType": "NoMatchingCondition"
                    }]
            }
        }, {
            "Parameters": {
                "Text": "$.Attributes.PlayPrompt-en-US"
            },
            "Identifier": "e2edb7ac-38ae-4587-a9b7-a73218392c2e",
            "Type": "MessageParticipant",
            "Transitions": {
                "NextAction": "3e562537-3142-4bbc-86db-ab8e09c366de",
                "Errors": [{
                        "NextAction": "3e562537-3142-4bbc-86db-ab8e09c366de",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "ComparisonValue": "$.Attributes.PlayPrompt"
            },
            "Identifier": "6808064a-12a7-4734-81c2-7dc6f7299339",
            "Type": "Compare",
            "Transitions": {
                "NextAction": "3e562537-3142-4bbc-86db-ab8e09c366de",
                "Conditions": [{
                        "NextAction": "18a6944c-7ab9-4415-9780-d0c104e7a620",
                        "Condition": {
                            "Operator": "Equals",
                            "Operands": ["true"]
                        }
                    }],
                "Errors": [{
                        "NextAction": "3e562537-3142-4bbc-86db-ab8e09c366de",
                        "ErrorType": "NoMatchingCondition"
                    }]
            }
        }, {
            "Parameters": {
                "Text": "$.Attributes.PlayPrompt-es-US"
            },
            "Identifier": "18a6944c-7ab9-4415-9780-d0c104e7a620",
            "Type": "MessageParticipant",
            "Transitions": {
                "NextAction": "3e562537-3142-4bbc-86db-ab8e09c366de",
                "Errors": [{
                        "NextAction": "3e562537-3142-4bbc-86db-ab8e09c366de",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "Media": {
                    "Uri": "s3://${PromptBucket}/lex_$.['LanguageCode']_.wav",
                    "SourceType": "S3",
                    "MediaType": "Audio"
                },
                "LexV2Bot": {
                    "AliasArn": "${BotAlias.Arn}"
                },
                "LexSessionAttributes": {
                    "CustomerNumber": "$.CustomerEndpoint.Address",
                    "InstanceArn": "$.InstanceARN"
                }
            },
            "Identifier": "3e562537-3142-4bbc-86db-ab8e09c366de",
            "Type": "ConnectParticipantWithLexBot",
            "Transitions": {
                "NextAction": "4346b8e4-b01b-40d9-9ec9-a41386aa51d5",
                "Conditions": [{
                        "NextAction": "ce3c59e8-960c-4d9b-937c-e0b33e4399bb",
                        "Condition": {
                            "Operator": "Equals",
                            "Operands": ["About"]
                        }
                    }, {
                        "NextAction": "652dd2c3-0163-4eb1-aba6-e65d0ae3f51f",
                        "Condition": {
                            "Operator": "Equals",
                            "Operands": ["${NAMEENGLISH}"]
                        }
                    }, {
                        "NextAction": "41429fc7-4d86-406d-ad8b-c68d31f5123c",
                        "Condition": {
                            "Operator": "Equals",
                            "Operands": ["Quit"]
                        }
                    }],
                "Errors": [{
                        "NextAction": "4346b8e4-b01b-40d9-9ec9-a41386aa51d5",
                        "ErrorType": "NoMatchingCondition"
                    }, {
                        "NextAction": "4346b8e4-b01b-40d9-9ec9-a41386aa51d5",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "Media": {
                    "Uri": "s3://${PromptBucket}/main.wav",
                    "SourceType": "S3",
                    "MediaType": "Audio"
                }
            },
            "Identifier": "8dd8a4dd-929e-4c2c-9bd6-74b17f2380e3",
            "Type": "MessageParticipant",
            "Transitions": {
                "NextAction": "4dc9bbef-e78f-49f4-844d-9d07986704f0",
                "Errors": [{
                        "NextAction": "4dc9bbef-e78f-49f4-844d-9d07986704f0",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }, {
            "Parameters": {
                "LambdaFunctionARN": "${SendToSNS.Arn}",
                "InvocationTimeLimitSeconds": "3",
                "LambdaInvocationAttributes": {
                    "P-Asserted-Identity": "$.Media.Sip.Headers.P-Asserted-Identity",
                    "From": "$.Media.Sip.Headers.From",
                    "ISUP-OLI": "$.Media.Sip.Headers.ISUP-OLI",
                    "Calling-Party-Address": "$.Media.Sip.Headers.Calling-Party-Address"
                },
                "ResponseValidation": {
                    "ResponseType": "STRING_MAP"
                }
            },
            "Identifier": "6fa66314-f6a2-4829-b466-86dad4bc3b43",
            "Type": "InvokeLambdaFunction",
            "Transitions": {
                "NextAction": "8dd8a4dd-929e-4c2c-9bd6-74b17f2380e3",
                "Errors": [{
                        "NextAction": "8dd8a4dd-929e-4c2c-9bd6-74b17f2380e3",
                        "ErrorType": "NoMatchingError"
                    }]
            }
        }]
        }
      