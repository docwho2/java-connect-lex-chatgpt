/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package cloud.cleo.connectgpt;

import com.amazonaws.services.lambda.runtime.events.ConnectEvent;
import java.time.Duration;
import java.time.Instant;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedTimestampAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbBean;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbIgnore;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbSortKey;

/**
 * Simple Object representing a call into Connect
 * 
 * @author sjensen
 */
@DynamoDbBean
public class CallRecord {

    private String phoneNumber;
    private LocalDate date;
    private Long counter;
    private Instant lastUpdate;
    private Long ttl;
    private List<Call> calls;
    private Map<String,String> parameters;

    public CallRecord() {
    }

    public CallRecord(ConnectEvent event) {
        this.phoneNumber = event.getDetails().getContactData().getCustomerEndpoint().getAddress();
        this.date = LocalDate.now(ZoneId.of("America/Chicago"));
        this.counter = 0L;
        // Expire entries after 60 days
        this.ttl = Instant.now().plus(Duration.ofDays(60)).getEpochSecond();
        this.calls = new LinkedList<>();
        
        this.parameters = new HashMap<>();
        if ( event.getDetails().getParameters() != null ) {
            // Convert String/Object Map to String/String so it can be saved to Dynamo Table
            event.getDetails().getParameters().forEach((k, v) -> parameters.put(k, v.toString()));
        }
    }

    
    @DynamoDbIgnore
    public void addCall(String contactId) {
        // Increment call counter
        counter = counter + 1L;
        
        // Add new Call to the list
        getCalls().add(new Call(contactId, Instant.now()));
    }
    

    /**
     * @return the phoneNumber
     */
    @DynamoDbPartitionKey
    public String getPhoneNumber() {
        return phoneNumber;
    }

    /**
     * @param phoneNumber the phoneNumber to set
     */
    public void setPhoneNumber(String phoneNumber) {
        this.phoneNumber = phoneNumber;
    }

    /**
     * @return the date
     */
    @DynamoDbSortKey
    public LocalDate getDate() {
        return date;
    }

    /**
     * @param date the date to set
     */
    public void setDate(LocalDate date) {
        this.date = date;
    }

   

    /**
     * @return the counter
     */
    public Long getCounter() {
        return counter;
    }

    /**
     * @param counter the counter to set
     */
    public void setCounter(Long counter) {
        this.counter = counter;
    }

    /**
     * @return the lastUpdate
     */
    @DynamoDbAutoGeneratedTimestampAttribute
    public Instant getLastUpdate() {
        return lastUpdate;
    }

    /**
     * @param lastUpdate the lastUpdate to set
     */
    public void setLastUpdate(Instant lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    /**
     * @return the ttl
     */
    public Long getTtl() {
        return ttl;
    }

    /**
     * @param ttl the ttl to set
     */
    public void setTtl(Long ttl) {
        this.ttl = ttl;
    }
    
    /**
     * @return the calls
     */
    public List<Call> getCalls() {
        return calls;
    }

    /**
     * @param calls the calls to set
     */
    public void setCalls(List<Call> calls) {
        this.calls = calls;
    }

    /**
     * @return the parameters
     */
    public Map<String,String> getParameters() {
        return parameters;
    }

    /**
     * @param parameters the parameters to set
     */
    public void setParameters(Map<String,String> parameters) {
        this.parameters = parameters;
    }

}
